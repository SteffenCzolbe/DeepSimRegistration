venv
lightning_logs*
experiment_logs
src/exploration
tmp*
*.pdf
*.png
*.ckpt
out
weights
*.pckl
*.pickl
.vscode
*.tif
#*.sh
data
data/*

# my folders
src/plots2/*
src/plots2
weights_exp
weights_exp/*
my_logs
my_logs/*
my_logs2
my_logs2/*
my_temp
my_temp/*
logs_transfer
logs_transfer/*
logs_transfer-ae
logs_transfer-ae/*
hpc_logs
hpc_logs/*
jobs
jobs/*
scripts_demos/*
scripts_demos
scripts_ppar/*
scripts_ppar
logs_levels
logs_levels/*
logs_levels_
logs_levels_/*
logs_levels2
logs_levels2/*
logs_levels2_ae
logs_levels2_ae/*
logs_levels_ae
logs_levels_ae/*
logs_levels_seg
logs_levels_seg/*
logs_levels_seg2
logs_levels_seg2/*
my_logs_transmorph
my_logs_transmorph/*
my_mind
mind_loss
avg_time
tests
tests/*

# my files
hpc_train1.sh
hpc_train2.sh
hpc_train3.sh
*/train_registrationG*.py
*/train_segmentationG*.py


# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
